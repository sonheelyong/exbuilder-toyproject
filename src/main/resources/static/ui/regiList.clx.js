/*
 * App URI: regiList
 * Source Location: regiList.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("regiList", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * regiList.js
			 * Created at 2023. 4. 2. 오후 11:09:42.
			 *
			 * @author User
			 ************************************************/

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				app.lookup("getRegiList").send()
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onGetRegiListSubmitSuccess(e){
				var getRegiList = e.control;
				app.lookup("grd1").redraw()
			}

			/*
			 * "신청 취소" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var button = e.control;
				var vcGrid = app.lookup("grd1");
				var code = vcGrid.getSelectedRow().getValue("code")
				var teacher = vcGrid.getSelectedRow().getValue("teacher")
				var class_name = vcGrid.getSelectedRow().getValue("class_name")
				
				
				
				if(confirm("강의명:"+class_name+",강사명:"+teacher+"\n수강신청을 취소 하시겠습니까?") == true){
					app.lookup("selectcode").setValue("code", code);
					app.lookup("cancle").send()
					}else{}
				
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onCancleSubmitSuccess(e){
				var cancle = e.control;
				alert("수강 신청 취소가 완료되었습니다.")
				app.lookup("getRegiList").send()
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("regiList");
			dataSet_1.parseData({
				"columns" : [
					{"name": "code"},
					{"name": "class_name"},
					{"name": "teacher"},
					{"name": "s_date"},
					{"name": "e_date"},
					{"name": "regi_date"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("selectcode");
			dataMap_1.parseData({
				"columns" : [{
					"name": "code",
					"dataType": "number"
				}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("getRegiList");
			submission_1.action = "/getRegiList";
			submission_1.addResponseData(dataSet_1, false);
			if(typeof onGetRegiListSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onGetRegiListSubmitSuccess);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("cancle");
			submission_2.action = "/cancle";
			submission_2.addRequestData(dataMap_1);
			if(typeof onCancleSubmitSuccess == "function") {
				submission_2.addEventListener("submit-success", onCancleSubmitSuccess);
			}
			app.register(submission_2);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("regiList"),
				"columns": [
					{"width": "80px"},
					{"width": "124px"},
					{"width": "87px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = true;
								cell.sortable = true;
								cell.targetColumnName = "code";
								cell.text = "코드";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.filterable = true;
								cell.sortable = true;
								cell.targetColumnName = "class_name";
								cell.text = "강의 명";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.filterable = true;
								cell.sortable = true;
								cell.targetColumnName = "teacher";
								cell.text = "강사명";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.filterable = true;
								cell.sortable = true;
								cell.targetColumnName = "s_date";
								cell.text = "강의 시작일";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.filterable = true;
								cell.sortable = true;
								cell.targetColumnName = "e_date";
								cell.text = "강의 종료일";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.filterable = true;
								cell.sortable = true;
								cell.targetColumnName = "regi_date";
								cell.text = "강의 등록일";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "code";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "class_name";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "teacher";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "s_date";
								cell.control = (function(){
									var dateInput_1 = new cpr.controls.DateInput("dti1");
									dateInput_1.readOnly = true;
									dateInput_1.bind("value").toDataColumn("s_date");
									return dateInput_1;
								})();
								cell.controlConstraint = {};
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "e_date";
								cell.control = (function(){
									var dateInput_2 = new cpr.controls.DateInput("dti2");
									dateInput_2.readOnly = true;
									dateInput_2.bind("value").toDataColumn("e_date");
									return dateInput_2;
								})();
								cell.controlConstraint = {};
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "regi_date";
								cell.control = (function(){
									var dateInput_3 = new cpr.controls.DateInput("dti3");
									dateInput_3.readOnly = true;
									dateInput_3.bind("value").toDataColumn("regi_date");
									return dateInput_3;
								})();
								cell.controlConstraint = {};
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.control = (function(){
									var button_1 = new cpr.controls.Button();
									button_1.value = "신청 취소";
									if(typeof onButtonClick == "function") {
										button_1.addEventListener("click", onButtonClick);
									}
									return button_1;
								})();
								cell.controlConstraint = {};
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "39px",
				"left": "34px",
				"width": "739px",
				"height": "289px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "regiList";
	cpr.core.Platform.INSTANCE.register(app);
})();
