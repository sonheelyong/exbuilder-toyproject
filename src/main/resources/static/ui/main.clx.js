/*
 * App URI: main
 * Source Location: main.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("main", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * main.js
			 * Created at 2023. 3. 27. 오전 10:37:29.
			 *
			 * @author user
			 ************************************************/

			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(e){
				app.lookup("getclass").send();
				app.lookup("getuser").send();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onGetclassSubmitSuccess(e){
				var getclass = e.control;
				app.lookup("grd2").redraw();
			}

			/*
			 * "조회" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(e){
				var button = e.control;
				app.lookup("serchclass").send()
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onGetuserSubmitSuccess(e){
				var getuser = e.control;
				app.lookup("output1").redraw()
			}

			/*
			 * "로그아웃" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3(e){
				var button = e.control;
				app.lookup("logout").send()
				var link = '/ui/index.clx';
				location.href=link;
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSerchclassSubmitSuccess(e){
				var serchclass = e.control;
				app.lookup("grd2").redraw()
			}

			/*
			 * "강의신청" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick4(e){
				var button = e.control;
			//	var vcGrid = app.lookup("grd1");
			//	var vnSelectedRowIdx = vcGrid.getSelectedRowIndex();
				alert("dd")
			//	alert(vnSelectedRowIdx);
				
			}

			/*
			 * "수강신청" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick5(e){
				var button = e.control;
				var vcGrid = app.lookup("grd2");
				var index = vcGrid.getSelectedRowIndex();
				var vnSelectedRowIdx = vcGrid.dataSet.getOriginalValue(index, "code");
				app.lookup("selectcode").setValue("code", vnSelectedRowIdx);
				app.lookup("regiclass").send()
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("class");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "code",
						"dataType": "string"
					},
					{"name": "class_name"},
					{"name": "teacher"},
					{
						"name": "s_date",
						"dataType": "string"
					},
					{
						"name": "e_date",
						"dataType": "string"
					}
				],
				"rows": []
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("searchname");
			dataMap_1.parseData({
				"columns" : [{"name": "class_name"}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("loginuser");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "user_id",
						"dataType": "string"
					},
					{"name": "user_name"}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("selectcode");
			dataMap_3.parseData({
				"columns" : [{"name": "code"}]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("getclass");
			submission_1.action = "/getclass";
			submission_1.addResponseData(dataSet_1, true);
			if(typeof onGetclassSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onGetclassSubmitSuccess);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("serchclass");
			submission_2.action = "/searchclass";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_1, false);
			if(typeof onSerchclassSubmitSuccess == "function") {
				submission_2.addEventListener("submit-success", onSerchclassSubmitSuccess);
			}
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("getuser");
			submission_3.method = "get";
			submission_3.action = "/getusername";
			submission_3.addResponseData(dataMap_2, false);
			if(typeof onGetuserSubmitSuccess == "function") {
				submission_3.addEventListener("submit-success", onGetuserSubmitSuccess);
			}
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("logout");
			submission_4.action = "/logout";
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("regiclass");
			submission_5.action = "/regi";
			submission_5.addRequestData(dataMap_3);
			app.register(submission_5);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output();
			output_1.value = "수강 관리 페이지";
			output_1.style.css({
				"font-size" : "40px",
				"text-align" : "center"
			});
			container.addChild(output_1, {
				"top": "10px",
				"width": "379px",
				"height": "110px",
				"left": "calc(50% - 189px)"
			});
			
			var group_1 = new cpr.controls.Container();
			var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("searchname"));
			group_1.setBindContext(dataMapContext_1);
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_2 = new cpr.controls.Output();
				output_2.value = "강의명";
				container.addChild(output_2, {
					"top": "20px",
					"left": "45px",
					"width": "64px",
					"height": "20px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				inputBox_1.bind("value").toDataColumn("class_name");
				container.addChild(inputBox_1, {
					"top": "16px",
					"left": "119px",
					"width": "542px",
					"height": "28px"
				});
				var button_1 = new cpr.controls.Button();
				button_1.value = "조회";
				if(typeof onButtonClick2 == "function") {
					button_1.addEventListener("click", onButtonClick2);
				}
				container.addChild(button_1, {
					"top": "20px",
					"left": "671px",
					"width": "67px",
					"height": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "143px",
				"width": "814px",
				"height": "51px",
				"left": "calc(50% - 407px)"
			});
			
			var output_3 = new cpr.controls.Output();
			output_3.value = "님.   환영합니다";
			container.addChild(output_3, {
				"top": "25px",
				"left": "1082px",
				"width": "112px",
				"height": "20px"
			});
			
			var output_4 = new cpr.controls.Output("output1");
			output_4.bind("value").toDataMap(app.lookup("loginuser"), "user_name");
			container.addChild(output_4, {
				"top": "25px",
				"left": "1014px",
				"width": "72px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "로그아웃";
			if(typeof onButtonClick3 == "function") {
				button_2.addEventListener("click", onButtonClick3);
			}
			container.addChild(button_2, {
				"top": "25px",
				"left": "1203px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button();
			button_3.value = "수강신청";
			if(typeof onButtonClick5 == "function") {
				button_3.addEventListener("click", onButtonClick5);
			}
			container.addChild(button_3, {
				"top": "454px",
				"left": "903px",
				"width": "100px",
				"height": "47px"
			});
			
			var button_4 = new cpr.controls.Button();
			button_4.value = "수강취소";
			container.addChild(button_4, {
				"top": "454px",
				"left": "1057px",
				"width": "100px",
				"height": "48px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd2");
			grid_1.readOnly = true;
			grid_1.init({
				"dataSet": app.lookup("class"),
				"columns": [
					{"width": "60px"},
					{"width": "177px"},
					{"width": "83px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = true;
								cell.sortable = true;
								cell.targetColumnName = "code";
								cell.text = "번호";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.filterable = true;
								cell.sortable = true;
								cell.targetColumnName = "class_name";
								cell.text = "강의 명";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.filterable = true;
								cell.sortable = true;
								cell.targetColumnName = "teacher";
								cell.text = "강사명";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.filterable = true;
								cell.sortable = true;
								cell.targetColumnName = "s_date";
								cell.text = "수업 시작일";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.filterable = true;
								cell.sortable = true;
								cell.targetColumnName = "e_date";
								cell.text = "수업 종료일";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.text = "수강 신청일";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "code";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "class_name";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "teacher";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "s_date";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "e_date";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "224px",
				"width": "1011px",
				"height": "200px",
				"left": "calc(50% - 505px)"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "main";
	cpr.core.Platform.INSTANCE.register(app);
})();
